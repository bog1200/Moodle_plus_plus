generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Enums
enum AssignmentType {
  HOMEWORK
  EXAM
  PROJECT
  QUIZ
}

model Grade {
  id           Int        @id @default(autoincrement())
  gradeValue   String
  student      Student    @relation(fields: [studentId], references: [id])
  studentId    Int
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId Int
}

model File {
  id          Int     @id @default(autoincrement())
  fileName    String
  fileType    String
  fileContent Bytes
  owner       Account @relation(fields: [ownerId], references: [id])
  ownerId     Int
}

model CourseAttendance {
  id        Int      @id @default(autoincrement())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  date      DateTime
  present   Boolean
}

model Course {
  id          Int                @id @default(autoincrement())
  name        String
  description String
  teacher     Teacher            @relation(fields: [teacherId], references: [id])
  teacherId   Int
  attendances CourseAttendance[]
}

model AssignmentSubmission {
  id             Int        @id @default(autoincrement())
  submissionDate DateTime
  student        Student    @relation(fields: [studentId], references: [id])
  studentId      Int
  assignment     Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId   Int
}

model Assignment {
  id             Int                    @id @default(autoincrement())
  title          String
  description    String
  dueDate        DateTime
  assignmentType AssignmentType
  submissions    AssignmentSubmission[]
  Grade          Grade[]
}

model Account {
  id        Int       @id @default(autoincrement())
  ssoId     String    @unique
  firstName String
  lastName  String
  email     String
  phone     String
  address   String
  gender    String
  dob       DateTime
  File      File[]
  Teacher   Teacher[]
  Student   Student[]
}

model Teacher {
  id        Int       @id @default(autoincrement())
  account   Account   @relation(fields: [accountId], references: [id])
  accountId Int
  courses   Course[]
  Subject   Subject[]
}

model SubjectEnrollment {
  id        Int     @id @default(autoincrement())
  student   Student @relation(fields: [studentId], references: [id])
  studentId Int
  subject   Subject @relation(fields: [subjectId], references: [id])
  subjectId Int
}

model Subject {
  id          Int                 @id @default(autoincrement())
  name        String
  teacher     Teacher             @relation(fields: [teacherId], references: [id])
  teacherId   Int
  enrollments SubjectEnrollment[]
}

model StudentGroup {
  id       Int       @id @default(autoincrement())
  name     String
  students Student[]
}

model Student {
  id               Int                    @id @default(autoincrement())
  account          Account                @relation(fields: [accountId], references: [id])
  accountId        Int
  group            StudentGroup?          @relation(fields: [groupId], references: [id])
  groupId          Int?
  enrollments      SubjectEnrollment[]
  grades           Grade[]
  submissions      AssignmentSubmission[]
  CourseAttendance CourseAttendance[]
}
